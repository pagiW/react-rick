{"version":3,"sources":["App.js","Character.jsx","Ok.jsx","Main.jsx","index.js"],"names":["App","props","title","document","getElementById","useState","data","results","error","loading","dataState","setData","page","parseInt","match","params","fetchData","url","a","fetch","response","json","useEffect","innerHTML","className","map","character","to","created","src","image","alt","name","Character","status","setCharacter","isLoading","find","myCharacter","getFetch","Ok","Main","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.04194bb7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction App(props) {\n  const title = document.getElementById('title');\n  let [dataState, setData] = useState({\n    data: {\n      results: [],\n    },\n    error: null,\n    loading: true,\n  });\n  const page = parseInt(props.match.params.page);\n  const fetchData = async (url) => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setData({\n        data: data,\n        loading: false,\n      });\n    } catch (error) {\n      setData({\n        error: error,\n        loading: false,\n      });\n    }\n  }\n  useEffect(() => {\n    fetchData(`https://rickandmortyapi.com/api/character/?page=${page}`);\n    if (dataState.loading) {\n      title.innerHTML = 'Loading...';\n    } else {\n      title.innerHTML = `Rick and Morty | page: ${page}`;\n    }\n  }, [page, title, dataState]);\n  return (\n    <div className=\"App\">\n      {dataState.loading && <h1>loading...</h1>}\n      {dataState.error && <h1>Error: {dataState.error}</h1>}\n      {!dataState.loading && <ul>\n        {dataState.data.results.map(character => <Link to={`/react-rick/${page}/${character.created}`}><li><img src={character.image} alt={character.name} /><h1>{character.name}</h1></li></Link>)}\n      </ul>}\n      {!dataState.loading && page > 1 && <Link to={`/react-rick/${page - 1}`}><button>prev page</button></Link>}\n      {!dataState.loading && page < 34 && <Link to={`/react-rick/${page + 1}`}><button>next page</button></Link>}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Character = (props) => {\n    const title = document.getElementById('title');\n    let [character, setCharacter] = useState({\n        name: '',\n        image: '',\n        status: ''\n    });\n    let [loading, isLoading] = useState(true);\n    async function getFetch(url) {\n        const response = await fetch(url);\n        const data = await response.json();\n\n        setCharacter(character = data.results.find(myCharacter => myCharacter.created === props.match.params.created));\n        isLoading(loading = false);\n    }\n    useEffect(\n        () => {\n            getFetch(`https://rickandmortyapi.com/api/character/?page=${props.match.params.page}`);\n            if (loading) {\n                title.innerHTML = 'getting character...';\n            } else {\n                title.innerHTML = character.name;\n            }\n        },\n        [props, title, character.name, loading]\n    )\n    return (\n        <>\n            {loading ? <h1>Loading...</h1> :\n                <><img src={character.image} alt={character.name} />\n                <h1>{character.name}</h1>\n                <h2>{character.status}</h2></>\n            }\n            <Link to={`/react-rick/${props.match.params.page}`}><button>go to the main page</button></Link>\n        </>\n    );\n}\n\nexport default Character;","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Ok = () => {\n    const title = document.getElementById('title');\n    useEffect(() => {\n        title.innerHTML = 'Redirecting...';\n    }, [title])\n    return (\n        <Redirect to='/react-rick/1' />\n    );\n}\n\nexport default Ok;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport Character from './Character';\nimport Ok from './Ok';\n\nconst Main = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path='/react-rick' component={Ok} />\n                <Route exact path='/react-rick/:page' component={App} />\n                <Route exact path='/react-rick/:page/:created' component={Character} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}